{"version":3,"file":"extensions_dicom-video_src_viewports_OHIFCornerstoneVideoViewport_tsx.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAMA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["file:////Users/smartxx/xV/DICOM/Viewers/extensions/dicom-video/src/viewports/OHIFCornerstoneVideoViewport.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction OHIFCornerstoneVideoViewport({ displaySets }) {\n  if (displaySets && displaySets.length > 1) {\n    throw new Error(\n      'OHIFCornerstoneVideoViewport: only one display set is supported for dicom video right now'\n    );\n  }\n\n  const { videoUrl } = displaySets[0];\n  const mimeType = 'video/mp4';\n  const [url, setUrl] = useState(null);\n\n  useEffect(() => {\n    const load = async () => {\n      setUrl(await videoUrl);\n    };\n\n    load();\n  }, [videoUrl]);\n\n  // Need to copies of the source to fix a firefox bug\n  return (\n    <div className=\"bg-primary-black w-full h-full\">\n      <video\n        src={url}\n        controls\n        controlsList=\"nodownload\"\n        preload=\"auto\"\n        className=\"w-full h-full\"\n        crossOrigin=\"anonymous\"\n      >\n        <source src={url} type={mimeType} />\n        <source src={url} type={mimeType} />\n        Video src/type not supported:{' '}\n        <a href={url}>\n          {url} of type {mimeType}\n        </a>\n      </video>\n    </div>\n  );\n}\n\nOHIFCornerstoneVideoViewport.propTypes = {\n  displaySets: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default OHIFCornerstoneVideoViewport;\n"],"names":[],"sourceRoot":""}