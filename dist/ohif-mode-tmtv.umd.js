!function(o,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("@ohif/core"),require("@ohif/ui")):"function"==typeof define&&define.amd?define(["@ohif/core","@ohif/ui"],e):"object"==typeof exports?exports["ohif-mode-tmtv"]=e(require("@ohif/core"),require("@ohif/ui")):o["ohif-mode-tmtv"]=e(o["@ohif/core"],o["@ohif/ui"])}(globalThis,((o,e)=>(()=>{"use strict";var t={762:e=>{e.exports=o},369:o=>{o.exports=e}},n={};function i(o){var e=n[o];if(void 0!==e)return e.exports;var s=n[o]={exports:{}};return t[o](s,s.exports,i),s.exports}i.d=(o,e)=>{for(var t in e)i.o(e,t)&&!i.o(o,t)&&Object.defineProperty(o,t,{enumerable:!0,get:e[t]})},i.o=(o,e)=>Object.prototype.hasOwnProperty.call(o,e);var s={};return(()=>{i.d(s,{default:()=>A});var o=i(762),e=i(369);const t={CT:"ctToolGroup",PT:"ptToolGroup",Fusion:"fusionToolGroup",MIP:"mipToolGroup",default:"default"};const n=function(o,e,n,i){!function(o,e,n,i){const s={active:[{toolName:o.WindowLevel,bindings:[{mouseButton:e.MouseBindings.Primary}]},{toolName:o.Pan,bindings:[{mouseButton:e.MouseBindings.Auxiliary}]},{toolName:o.Zoom,bindings:[{mouseButton:e.MouseBindings.Secondary}]},{toolName:o.StackScrollMouseWheel,bindings:[]}],passive:[{toolName:o.Length},{toolName:o.ArrowAnnotate},{toolName:o.Bidirectional},{toolName:o.DragProbe},{toolName:o.Probe},{toolName:o.EllipticalROI},{toolName:o.RectangleROI},{toolName:o.StackScroll},{toolName:o.Angle},{toolName:o.CobbAngle},{toolName:o.Magnify}],enabled:[{toolName:o.SegmentationDisplay}],disabled:[{toolName:o.Crosshairs}]},l={[o.Crosshairs]:{viewportIndicators:!1,autoPan:{enabled:!1,panSize:10}},[o.ArrowAnnotate]:{getTextCallback:(o,e)=>{i.runCommand("arrowTextCallback",{callback:o,eventDetails:e})},changeTextCallback:(o,e,t)=>i.runCommand("arrowTextCallback",{callback:t,data:o,eventDetails:e})}};n.createToolGroupAndAddTools(t.CT,s,l),n.createToolGroupAndAddTools(t.PT,{active:s.active,passive:[...s.passive,{toolName:"RectangleROIStartEndThreshold"}],enabled:s.enabled,disabled:s.disabled},l),n.createToolGroupAndAddTools(t.Fusion,s,l),n.createToolGroupAndAddTools(t.default,s,l);const a={active:[{toolName:o.VolumeRotateMouseWheel},{toolName:o.MipJumpToClick,bindings:[{mouseButton:e.MouseBindings.Primary}]}],enabled:[{toolName:o.SegmentationDisplay}]},r={[o.VolumeRotateMouseWheel]:{rotateIncrementDegrees:.1},[o.MipJumpToClick]:{targetViewportIds:["ptAXIAL","ptCORONAL","ptSAGITTAL"]}};n.createToolGroupAndAddTools(t.MIP,a,r)}(o,e,n,i)},{windowLevelPresets:l}=o.defaults;function a(o,e,t,n,i,s){return{id:e,icon:t,label:n,type:o,commands:i,tooltip:s}}function r(o,e){return{id:o.toString(),title:o,subtitle:o,type:"action",commands:[{commandName:"setFusionPTColormap",commandOptions:{toolGroupId:t.Fusion,colormap:e}},{commandName:"setFusionPTColormap",commandOptions:{toolGroupId:t.Fusion,colormap:e}}]}}a.bind(null,"action"),a.bind(null,"toggle");const d=a.bind(null,"tool");function c(o,e,t){return{id:o.toString(),title:e,subtitle:t,type:"action",commands:[{commandName:"setWindowLevel",commandOptions:{...l[o]},context:"CORNERSTONE"}]}}function u(o,e,t){return t.map((t=>({commandName:o,commandOptions:{toolName:e,toolGroupId:t},context:"CORNERSTONE"})))}const m=[{id:"MeasurementTools",type:"ohif.splitButton",props:{groupId:"MeasurementTools",isRadio:!0,primary:d("Length","tool-length","Length",[...u("setToolActive","Length",[t.CT,t.PT,t.Fusion])],"Length"),secondary:{icon:"chevron-down",label:"",isActive:!0,tooltip:"More Measure Tools"},items:[d("Length","tool-length","Length",[...u("setToolActive","Length",[t.CT,t.PT,t.Fusion])],"Length Tool"),d("Bidirectional","tool-bidirectional","Bidirectional",[...u("setToolActive","Bidirectional",[t.CT,t.PT,t.Fusion])],"Bidirectional Tool"),d("ArrowAnnotate","tool-annotate","Annotation",[...u("setToolActive","ArrowAnnotate",[t.CT,t.PT,t.Fusion])],"Arrow Annotate"),d("EllipticalROI","tool-elipse","Ellipse",[...u("setToolActive","EllipticalROI",[t.CT,t.PT,t.Fusion])],"Ellipse Tool"),d("CircleROI","tool-circle","Circle",[...u("setToolActive","CircleROI",[t.CT,t.PT,t.Fusion])],"Circle Tool")]}},{id:"Zoom",type:"ohif.radioGroup",props:{type:"tool",icon:"tool-zoom",label:"Zoom",commands:[...u("setToolActive","Zoom",[t.CT,t.PT,t.Fusion])]}},{id:"MPR",type:"ohif.action",props:{type:"toggle",icon:"icon-mpr",label:"MPR",commands:[{commandName:"toggleHangingProtocol",commandOptions:{protocolId:"mpr"},context:"DEFAULT"}]}},{id:"WindowLevel",type:"ohif.splitButton",props:{groupId:"WindowLevel",primary:d("WindowLevel","tool-window-level","Window Level",[...u("setToolActive","WindowLevel",[t.CT,t.PT,t.Fusion])],"Window Level"),secondary:{icon:"chevron-down",label:"W/L Manual",isActive:!0,tooltip:"W/L Presets"},isAction:!0,renderer:e.WindowLevelMenuItem,items:[c(1,"Soft tissue","400 / 40"),c(2,"Lung","1500 / -600"),c(3,"Liver","150 / 90"),c(4,"Bone","2500 / 480"),c(5,"Brain","80 / 40")]}},{id:"Crosshairs",type:"ohif.radioGroup",props:{type:"tool",icon:"tool-crosshair",label:"Crosshairs",commands:[...u("setToolActive","Crosshairs",[t.CT,t.PT,t.Fusion])]}},{id:"Pan",type:"ohif.radioGroup",props:{type:"tool",icon:"tool-move",label:"Pan",commands:[...u("setToolActive","Pan",[t.CT,t.PT,t.Fusion])]}},{id:"RectangleROIStartEndThreshold",type:"ohif.radioGroup",props:{type:"tool",icon:"tool-create-threshold",label:"Rectangle ROI Threshold",commands:[...u("setToolActive","RectangleROIStartEndThreshold",[t.PT]),{commandName:"displayNotification",commandOptions:{title:"RectangleROI Threshold Tip",text:"RectangleROI Threshold tool should be used on PT Axial Viewport",type:"info"}},{commandName:"setViewportActive",commandOptions:{viewportId:"ptAXIAL"}}]}},{id:"fusionPTColormap",type:"ohif.splitButton",props:{groupId:"fusionPTColormap",primary:d("fusionPTColormap","tool-fusion-color","Fusion PT Colormap",[],"Fusion PT Colormap"),secondary:{icon:"chevron-down",label:"PT Colormap",isActive:!0,tooltip:"PET Image Colormap"},isAction:!0,renderer:e.WindowLevelMenuItem,items:[r("HSV","hsv"),r("Hot Iron","hot_iron"),r("S PET","s_pet"),r("Red Hot","red_hot"),r("Perfusion","perfusion"),r("Rainbow","rainbow_2"),r("SUV","suv"),r("GE 256","ge_256"),r("GE","ge"),r("Siemens","siemens")]}}],p=JSON.parse('{"u2":"@ohif/mode-tmtv"}').u2;const{MetadataProvider:T}=o.classes,g="@ohif/extension-default.layoutTemplateModule.viewerLayout",h="@ohif/extension-default.sopClassHandlerModule.stack",v="@ohif/extension-cornerstone.viewportModule.cornerstone",f="@ohif/extension-tmtv.hangingProtocolModule.ptCT",y="@ohif/extension-tmtv.panelModule.petSUV",C="@ohif/extension-tmtv.panelModule.ROIThresholdSeg",I={"@ohif/extension-default":"^3.0.0","@ohif/extension-cornerstone":"^3.0.0","@ohif/extension-tmtv":"^3.0.0"};let b=[];const A={id:p,modeFactory:function(e){let{modeConfiguration:i}=e;return{id:p,routeName:"tmtv",displayName:"Total Metabolic Tumor Volume",onModeEnter:o=>{let{servicesManager:e,extensionManager:i,commandsManager:s}=o;const{toolbarService:l,toolGroupService:a,hangingProtocolService:r,displaySetService:d}=e.services,c=i.getModuleEntry("@ohif/extension-cornerstone.utilityModule.tools"),{toolNames:u,Enums:p}=c.exports;n(u,p,a,s);const{unsubscribe:g}=a.subscribe(a.EVENTS.VIEWPORT_ADDED,(()=>{const{displaySetMatchDetails:o}=r.getMatchDetails();!function(o,e,n,i){const s=o.get("ctDisplaySet");if(!s)return;const{SeriesInstanceUID:l}=s,a=i.getDisplaySetsForSeries(l),r={...n.getToolConfiguration(t.Fusion,e.Crosshairs),filterActorUIDsToSetSlabThickness:[a[0].displaySetInstanceUID]};n.setToolConfiguration(t.Fusion,e.Crosshairs,r)}(o,u,a,d),function(o,e,n,i){const s=o.get("ptDisplaySet");if(!s)return;const{SeriesInstanceUID:l}=s,a=i.getDisplaySetsForSeries(l);if(!a||0===a.length)return;const r=n.getToolConfiguration(t.Fusion,e.WindowLevel),d=n.getToolConfiguration(t.Fusion,e.EllipticalROI),c=`cornerstoneStreamingImageVolume:${a[0].displaySetInstanceUID}`,u={...r,volumeId:c},m={...d,volumeId:c};n.setToolConfiguration(t.Fusion,e.WindowLevel,u),n.setToolConfiguration(t.Fusion,e.EllipticalROI,m)}(o,u,a,d),l.recordInteraction({groupId:"WindowLevel",itemId:"WindowLevel",interactionType:"tool",commands:[{commandName:"setToolActive",commandOptions:{toolName:u.WindowLevel,toolGroupId:t.CT},context:"CORNERSTONE"},{commandName:"setToolActive",commandOptions:{toolName:u.WindowLevel,toolGroupId:t.PT},context:"CORNERSTONE"},{commandName:"setToolActive",commandOptions:{toolName:u.WindowLevel,toolGroupId:t.Fusion},context:"CORNERSTONE"}]})}));b.push(g),l.init(i),l.addButtons(m),l.createButtonSection("primary",["MeasurementTools","Zoom","WindowLevel","Crosshairs","Pan","RectangleROIStartEndThreshold","fusionPTColormap"]),r.addCustomAttribute("getPTVOIRange","get PT VOI based on corrected or not",(o=>{const e=o.find((o=>"PT"===o.Modality));if(!e)return;const{imageId:t}=e.images[0],n=T.get("scalingModule",t);return n&&n.suvbw?{windowWidth:5,windowCenter:2.5}:void 0}))},onModeExit:o=>{let{servicesManager:e}=o;const{toolGroupService:t,syncGroupService:n,segmentationService:i,cornerstoneViewportService:s}=e.services;b.forEach((o=>o())),t.destroy(),n.destroy(),i.destroy(),s.destroy()},validationTags:{study:[],series:[]},isValidMode:o=>{let{modalities:e,study:t}=o;const n=e.split("\\");return n.includes("CT")&&n.includes("PT")&&!["SM"].some((o=>n.includes(o)))&&"1.3.6.1.4.1.12842.1.1.14.3.20220915.105557.468.2963630849"!==t.studyInstanceUid},routes:[{path:"tmtv",layoutTemplate:o=>{let{location:e,servicesManager:t}=o;return{id:g,props:{rightPanels:[C,y],viewports:[{namespace:v,displaySetsToDisplay:[h]}]}}}}],extensions:I,hangingProtocol:f,sopClassHandlers:[h],hotkeys:[...o.hotkeys.defaults.hotkeyBindings]}},extensionDependencies:I}})(),s=s.default})()));
//# sourceMappingURL=ohif-mode-tmtv.umd.js.map